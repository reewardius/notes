> aws iam create-user --user-name [USERNAME]
> aws iam create-access-key --user-name [USERNAME]
---
When you create new access keys for an IAM user using the create-access-key command, the keys are returned in 
the command output as the AccessKeyId and SecretAccessKey attributes.
---
> aws iam attach-user-policy --user-name [USERNAME] --policy-arn arn:aws:iam::aws:policy/AWSSecurityAudit
> aws iam list-attached-user-policies --user-name [USERNAME]

=============

> pip install ScoutSuite

> export AWS_ACCESS_KEY_ID=[YOUR ACCESS KEY ID]
> export AWS_SECRET_ACCESS_KEY=[YOUR SECRET ACCESS KEY]

> scoutsuite -r us-east-1 -f html -o report.html
> scoutsuite --all-regions -f html -o report.html

You can also set the credentials in the ~/.aws/credentials file. By doing this, you don't have to 
set the environment variables every time you need to run a scan, it will use the credentials in the file as default.
> scoutsuite --all-regions -f html -o report.html -p my-profile

> cat ~/.aws/credentials

[default]
aws_access_key_id = [YOUR ACCESS KEY ID]
aws_secret_access_key = [YOUR SECRET ACCESS KEY]

====

RegionName
> aws iam get-user
> aws iam get-user | jq -r '.User.UserName'
> aws iam list-users | jq -r '.Users[] | select(.UserId=="'$(aws sts get-caller-identity | jq -r '.UserId')'") | .UserName'
> aws sts get-caller-identity
> aws iam get-user --user-name [USERNAME]

#Get RedionName

#!/bin/bash

# Set the IAM user name
user_name="[USERNAME]"

# Use the AWS CLI to get information about the user
user_info=$(aws iam get-user --user-name $user_name)

# Use jq to extract the user's ARN from the command output
user_arn=$(echo $user_info | jq -r '.User.Arn')

# Print the user's ARN
echo $user_arn

> ./script.sh


$ aws iam create-user --user-name john
$ aws iam attach-user-policy --user-name john --policy-arn arn:aws:iam::aws:policy/SecurityAudit
$ aws iam attach-user-policy --user-name john --policy-arn arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
$ aws iam list-attached-user-policies --user-name john
$ aws iam create-access-key --user-name john
{
    "AccessKey": {
        "UserName": "john",
        "AccessKeyId": "AKIAXXXXXXXXXXXXXXX",
        "SecretAccessKey": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
        "Status": "Active",
        "CreateDate": "2023-02-25T00:00:00.000Z"
    }
}

$ aws iam list-access-keys --user-name john
$ aws iam put-user-policy --user-name john --policy-name john-policy --policy-document file://john_policy.json

file://john_policy.json -> https://raw.githubusercontent.com/prowler-cloud/prowler/master/permissions/prowler-additions-policy.json


aws iam delete-user --user-name john
aws iam delete-policy --policy-arn arn:aws:iam::123456789012:policy/john-policy
aws iam delete-policy --policy-arn arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
aws iam delete-policy --policy-arn arn:aws:iam::aws:policy/SecurityAudit






