Yes, that is correct. When you use the -v /var/run/docker.sock:/var/run/docker.sock option to map the host's Docker daemon socket to the container, the container can use the Docker API to access and manipulate other containers running on the host. This can include things like starting, stopping, and inspecting containers, as well as creating and managing networks and volumes.

For example, you could use a container with access to the host's Docker daemon to start another container, or to inspect the logs of another container running on the host. However, you should be careful when granting a container access to the host's Docker daemon, as it can potentially be used to run malicious code on the host or compromise other containers.

It's also important to keep in mind that if you have any security concerns and you have a container that needs access to the host's Docker daemon, you could use the Docker Engine's remote API that can be reach via network to connect your container, it will limit the impact of a potential attack by isolating it on the network level, and also the fact that the only thing that can be performed with the remote API is the operations defined by the settings of the Remote API configuration on the engine.